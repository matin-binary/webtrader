{"version":3,"sources":["../../../../src/trade/tradeMenu.es6"],"names":["show_error","err","$","growl","error","message","console","get_active_symbol","landing_company","country","liveapi","send","active_symbols","then","data","markets","_","groupBy","map","symbols","sym","head","market","name","display_name","market_display_name","submarkets","submarket","submarket_display_name","subgroup_name","subgroup_display_name","subgroup","instruments","symbol","is_disabled","is_trading_suspended","exchange_is_open","pip","every","value","trade","find","menu","refreshMenu","contracts_for","res","require","tradeDialog","init","catch","refresh_active_symbols","local_storage","get","cached","authorize","events","on"],"mappings":"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","file":"tradeMenu.js","sourcesContent":["ï»¿import $ from 'jquery';\nimport liveapi from '../websockets/binary_websockets';\nimport menu from '../navigation/menu';\nimport { getSortedMarketSubmarkets } from '../common/marketUtils';\nimport \"jquery-growl\";\n\nconst show_error = (err) => {\n   $.growl.error({ message: err.message });\n   console.error(err);\n};\n\nconst get_active_symbol = (landing_company, country) => {\n   liveapi\n      .send({ active_symbols: 'brief' })\n      .then((data) => {\n         /* clean up the data! */\n         const active_symbols = data.active_symbols;\n         let markets = _(active_symbols).groupBy('market').map((symbols) => {\n            const active_symbols = symbols;\n            const sym = _.head(active_symbols);\n            const market = { name: sym.market, display_name: sym.market_display_name };\n            market.submarkets = _(active_symbols).groupBy('submarket').map((symbols) => {\n               const sym = _.head(symbols);\n               const submarket = { name: sym.submarket, display_name: sym.submarket_display_name, subgroup_name: sym.subgroup_display_name, subgroup: sym.subgroup };\n               submarket.instruments = _.map(symbols, (sym) => ({\n                  symbol: sym.symbol,\n                  display_name: sym.display_name,\n                  is_disabled: sym.is_trading_suspended || !sym.exchange_is_open,\n                  pip: sym.pip\n               })\n               );\n               submarket.is_disabled = _.every(submarket.instruments, 'is_disabled');\n               return submarket;\n            }).value();\n            market.is_disabled = _.every(market.submarkets, 'is_disabled');\n            return market;\n         }).value();\n         markets = getSortedMarketSubmarkets(markets);\n         const trade = $(\"#nav-menu\").find(\".trade\");\n         menu.refreshMenu(trade, markets, (symbol, display_name, pip) => {\n            liveapi\n               .send({ contracts_for: symbol })\n               .then((res) => {\n                  require(['trade/tradeDialog'],\n                     (tradeDialog) => tradeDialog.init({ symbol, display_name, pip }, res.contracts_for)\n                  );\n               }).catch(show_error);\n         });\n      })\n      .catch(show_error);\n}\n\nconst refresh_active_symbols = () => {\n   if (local_storage.get('oauth')) {\n      liveapi\n         .cached\n         .authorize()\n         .then(() => {\n            const country = local_storage.get('authorize').country;\n            liveapi\n            .cached\n            .send({ landing_company: country })\n            .then((data) => {\n               const landing_company = data.landing_company\n               get_active_symbol(landing_company, country);\n            });\n         })\n   } else{\n      get_active_symbol();\n   }\n}\n\nexport const init = () => {\n   require(['trade/tradeDialog']); // Trigger loading of tradeDialog\n   refresh_active_symbols();\n   require(['websockets/binary_websockets'], (liveapi) => {\n      liveapi.events.on('login', refresh_active_symbols);\n      liveapi.events.on('logout', refresh_active_symbols);\n   });\n}\n\nexport default { init };\n"]}